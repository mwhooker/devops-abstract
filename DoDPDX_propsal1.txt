Working title(s)
    Cloud-Native DevOps

Type
    Presentation

Abstract

    

    The role of IT administrators is constantly evolving. We've been burdened
(bestowed?) with the task of automating as much as possible as our
infrastructure changes faster than we can keep up.

    Until 2005, you were probably using CFEngine or shell scripts and whatever
package manager your OS supported. Around that time Puppet and Chef dropped, and
it was enlightening. Then, in 2008, EC2 went stable, and the term DevOps started
gaining popularity the next year.

    With modern configuration management tools and an elastic supply of
"machines" to run them on, we were able to start writing software-defined
infrastructure.

    Unfortunately, both Puppet and Chef arrived just on the cusp of the
transition to IaaS, before we understood best practices for operating in this
new environment. And it shows in the heritage of most subsequent configuration management tools.

    Tools like Chef and Puppet helped to end the nightmare of shell scripts and
distro-specific packaging, and gave us the idea of "DevOps", which is the
reification of infrastructure. However, these tools arrived on the cusp of the
transition in to the cloud, and so they were built for the realities of data
centers and raw hardware.

    This talk is about how we've attempted to bridge the gap to "Cloud-Native"
DevOps. I'll try to demonstrate how some perceived drawbacks of the cloud
can actually be huge advantages if used correctly.

    I'll show that Chef has fundamental flawed and that operating in the
cloud actually provides a way forward.
